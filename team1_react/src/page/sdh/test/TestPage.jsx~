import React, { useState } from 'react';
import QRCode from 'react-qr-code';
import axiosInstance from '../../../../api/axiosInstance'; // ✅ 확장자 .jsx 제거 권장

function TestPage ()
{
  const data = '1/모나미학용품창고1';
  const onlyCode = data.split('/')[0];
  
  const [imageSrc, setImageSrc] = useState(null);       // 미리보기용
  const [imageFile, setImageFile] = useState(null);     // 전송용 원본 파일
  const [category, setCategory] = useState('');
  const categories = ['필기구', '사무용품', '생활용품', '가전', '기타'];
  
  const handleImageChange = (e) => {
    const file = e.target.files?.[0];
    if (file)
    {
      const imageUrl = URL.createObjectURL(file);
      setImageSrc(imageUrl);
      setImageFile(file);
    }
  };
  
  const handleUpload = async () => {
    if (!imageFile)
    {
      alert('이미지를 먼저 선택하세요.');
      return;
    }
    
    const formData = new FormData();
    formData.append('image', imageFile);
    
    try
    {
      const response = await axios.post('http://localhost:8080/api/upload', formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });
      
      // 백에서 받은 imageUrl로 이미지 업데이트
      setImageSrc(response.data.imageUrl);
      window.location.reload();
    }
    catch (error)
    {
      console.error('이미지 업로드 실패:', error);
    }
  };
  
  return (
    <>
      <div className="p-10">
        <h2 className="text-2xl font-semibold mb-4">QR 테스트</h2>
        <div className="bg-white p-4 rounded shadow inline-block">
          <QRCode value={`http://10.100.203.16:8080/api/items/${onlyCode}/dispatch-quantity`} />
        </div>
      </div>
      
      <div className="p-10">
        <h2 className="text-2xl font-semibold mb-4">이미지 테스트</h2>
        
        <div className="bg-white p-4 rounded shadow inline-block">
          <label className="cursor-pointer">
            <div className="w-24 h-24 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden relative">
              {imageSrc ? (
                <img src={imageSrc} className="w-full h-full object-cover" alt="업로드된 이미지" />
              ) : (
                <span className="text-sm text-gray-400 text-center">클릭하여<br />이미지 선택</span>
              )}
              <input
                type="file"
                accept="image/*"
                onChange={handleImageChange}
                className="hidden"
              />
            </div>
          </label>
          
          {/* 요청 버튼 */}
          <div className="mt-4 text-center">
            <button
              onClick={handleUpload}
              className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
            >
              요청
            </button>
          </div>
        
        </div>
        {/*카테고리*/}
        <div className="flex items-center w-full max-w-md">
          <label className="w-20 text-sm font-medium text-gray-700 whitespace-nowrap">
            카테고리
          </label>
          <select
            className="flex-1 border rounded px-3 py-2"
            value={category}
            onChange={(e) => setCategory(e.target.value)}>
            <option>선택하세요</option>
            {categories.map((cat, index) => (
              <option key={index} value={cat}>{cat}</option>
            ))}
          </select>
        
        </div>
      </div>
    
    
    </>
  );
}

export default TestPage;
